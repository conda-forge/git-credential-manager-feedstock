--- src/windows/Installer.Windows/layout.ps1
+++ src/windows/Installer.Windows/layout.ps1
@@ -43,7 +43,7 @@
 dotnet publish "$GCM_SRC" `
 	--framework net472 `
 	--configuration "$CONFIGURATION" `
-	--runtime win-x86 `
+	--runtime win-x64 `
 	--output "$PAYLOAD"
 
 Write-Output "Publishing core UI helper..."
@@ -78,19 +78,19 @@
 Remove-Item -Path "$PAYLOAD/*.dylib" -Force
 
 # Delete extraneous files that get included for other architectures
-# We only care about x86 as the core GCM executable is only targeting x86
+# We only care about x64 as the core GCM executable is only targeting x64
 Remove-Item -Path "$PAYLOAD/arm/" -Recurse -Force
 Remove-Item -Path "$PAYLOAD/arm64/" -Recurse -Force
-Remove-Item -Path "$PAYLOAD/x64/" -Recurse -Force
+Remove-Item -Path "$PAYLOAD/x86/" -Recurse -Force
 Remove-Item -Path "$PAYLOAD/musl-x64/" -Recurse -Force
 Remove-Item -Path "$PAYLOAD/runtimes/win-arm64/" -Recurse -Force
-Remove-Item -Path "$PAYLOAD/runtimes/win-x64/" -Recurse -Force
+Remove-Item -Path "$PAYLOAD/runtimes/win-x86/" -Recurse -Force
 
 # The Avalonia and MSAL binaries in these directories are already included in
 # the $PAYLOAD directory directly, so we can delete these extra copies.
-Remove-Item -Path "$PAYLOAD/x86/libSkiaSharp.dll" -Recurse -Force
-Remove-Item -Path "$PAYLOAD/x86/libHarfBuzzSharp.dll" -Recurse -Force
-Remove-Item -Path "$PAYLOAD/runtimes/win-x86/native/msalruntime_x86.dll" -Recurse -Force
+Remove-Item -Path "$PAYLOAD/x64/libSkiaSharp.dll" -Recurse -Force
+Remove-Item -Path "$PAYLOAD/x64/libHarfBuzzSharp.dll" -Recurse -Force
+Remove-Item -Path "$PAYLOAD/runtimes/win-x64/native/msalruntime_x64.dll" -Recurse -Force
 
 # Delete localized resource assemblies - we don't localize the core GCM assembly anyway
 Get-ChildItem "$PAYLOAD" -Recurse -Include "*.resources.dll" | Remove-Item -Force
--- src/windows/Installer.Windows/Installer.Windows.csproj
+++ src/windows/Installer.Windows/Installer.Windows.csproj
@@ -5,3 +5,4 @@
   <PropertyGroup>
     <TargetFramework>net472</TargetFramework>
+    <PlatformTarget>x64</PlatformTarget>
     <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
